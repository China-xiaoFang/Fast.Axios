{"version":3,"file":"message.mjs","sources":["../../../../../src/axios/types/message.ts"],"sourcesContent":["type MessageHandle = (message: string) => void;\ntype MessageUseHandle = { use: (fn: MessageHandle) => void };\n\nexport class MessageManage {\n\tprivate _handle: {\n\t\tsuccess: MessageHandle;\n\t\twarning: MessageHandle;\n\t\tinfo: MessageHandle;\n\t\terror: MessageHandle;\n\t};\n\n\t/** 成功 */\n\treadonly success: MessageHandle & MessageUseHandle;\n\t/** 警告 */\n\treadonly warning: MessageHandle & MessageUseHandle;\n\t/** 信息 */\n\treadonly info: MessageHandle & MessageUseHandle;\n\t/** 错误 */\n\treadonly error: MessageHandle & MessageUseHandle;\n\n\tconstructor() {\n\t\tthis._handle = {\n\t\t\tsuccess: (message: string): void => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log(`[Fast.Axios] ${message}`);\n\t\t\t},\n\t\t\twarning: (message: string): void => {\n\t\t\t\tconsole.warn(`[Fast.Axios] ${message}`);\n\t\t\t},\n\t\t\tinfo: (message: string): void => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log(`[Fast.Axios] ${message}`);\n\t\t\t},\n\t\t\terror: (message: string): void => {\n\t\t\t\tconsole.error(`[Fast.Axios] ${message}`);\n\t\t\t},\n\t\t};\n\n\t\tconst successProxy: MessageHandle & MessageUseHandle = (message: string): void => {\n\t\t\tthis._handle.success(message);\n\t\t};\n\t\tsuccessProxy.use = (fn: MessageHandle): void => {\n\t\t\tthis._handle.success = fn;\n\t\t};\n\t\tthis.success = successProxy;\n\n\t\tconst warningProxy: MessageHandle & MessageUseHandle = (message: string): void => {\n\t\t\tthis._handle.warning(message);\n\t\t};\n\t\twarningProxy.use = (fn: MessageHandle): void => {\n\t\t\tthis._handle.warning = fn;\n\t\t};\n\t\tthis.warning = warningProxy;\n\n\t\tconst infoProxy: MessageHandle & MessageUseHandle = (message: string): void => {\n\t\t\tthis._handle.info(message);\n\t\t};\n\t\tinfoProxy.use = (fn: MessageHandle): void => {\n\t\t\tthis._handle.info = fn;\n\t\t};\n\t\tthis.info = infoProxy;\n\n\t\tconst errorProxy: MessageHandle & MessageUseHandle = (message: string): void => {\n\t\t\tthis._handle.error(message);\n\t\t};\n\t\terrorProxy.use = (fn: MessageHandle): void => {\n\t\t\tthis._handle.error = fn;\n\t\t};\n\t\tthis.error = errorProxy;\n\t}\n}\n"],"names":[],"mappings":";;;AAGO,MAAM,cAAc;AAAA,EAiB1B,cAAc;AAhBN;AAQC;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGR,SAAK,UAAU;AAAA,MACd,SAAS,CAAC,YAA0B;AAE3B,gBAAA,IAAI,gBAAgB,OAAO,EAAE;AAAA,MACtC;AAAA,MACA,SAAS,CAAC,YAA0B;AAC3B,gBAAA,KAAK,gBAAgB,OAAO,EAAE;AAAA,MACvC;AAAA,MACA,MAAM,CAAC,YAA0B;AAExB,gBAAA,IAAI,gBAAgB,OAAO,EAAE;AAAA,MACtC;AAAA,MACA,OAAO,CAAC,YAA0B;AACzB,gBAAA,MAAM,gBAAgB,OAAO,EAAE;AAAA,MAAA;AAAA,IAEzC;AAEM,UAAA,eAAiD,CAAC,YAA0B;AAC5E,WAAA,QAAQ,QAAQ,OAAO;AAAA,IAC7B;AACa,iBAAA,MAAM,CAAC,OAA4B;AAC/C,WAAK,QAAQ,UAAU;AAAA,IACxB;AACA,SAAK,UAAU;AAET,UAAA,eAAiD,CAAC,YAA0B;AAC5E,WAAA,QAAQ,QAAQ,OAAO;AAAA,IAC7B;AACa,iBAAA,MAAM,CAAC,OAA4B;AAC/C,WAAK,QAAQ,UAAU;AAAA,IACxB;AACA,SAAK,UAAU;AAET,UAAA,YAA8C,CAAC,YAA0B;AACzE,WAAA,QAAQ,KAAK,OAAO;AAAA,IAC1B;AACU,cAAA,MAAM,CAAC,OAA4B;AAC5C,WAAK,QAAQ,OAAO;AAAA,IACrB;AACA,SAAK,OAAO;AAEN,UAAA,aAA+C,CAAC,YAA0B;AAC1E,WAAA,QAAQ,MAAM,OAAO;AAAA,IAC3B;AACW,eAAA,MAAM,CAAC,OAA4B;AAC7C,WAAK,QAAQ,QAAQ;AAAA,IACtB;AACA,SAAK,QAAQ;AAAA,EAAA;AAEf;"}