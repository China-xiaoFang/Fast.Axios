{"version":3,"file":"message.js","sources":["../../../../../src/axios/types/message.ts"],"sourcesContent":["type MessageHandle = (message: string) => void;\ntype MessageUseHandle = { use: (fn: MessageHandle) => void };\n\nexport class MessageManage {\n\tprivate _handle: {\n\t\tsuccess: MessageHandle;\n\t\twarning: MessageHandle;\n\t\tinfo: MessageHandle;\n\t\terror: MessageHandle;\n\t};\n\n\t/** 成功 */\n\treadonly success: MessageHandle & MessageUseHandle;\n\t/** 警告 */\n\treadonly warning: MessageHandle & MessageUseHandle;\n\t/** 信息 */\n\treadonly info: MessageHandle & MessageUseHandle;\n\t/** 错误 */\n\treadonly error: MessageHandle & MessageUseHandle;\n\n\tconstructor() {\n\t\tthis._handle = {\n\t\t\tsuccess: (message: string): void => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log(`[Fast.Axios] ${message}`);\n\t\t\t},\n\t\t\twarning: (message: string): void => {\n\t\t\t\tconsole.warn(`[Fast.Axios] ${message}`);\n\t\t\t},\n\t\t\tinfo: (message: string): void => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log(`[Fast.Axios] ${message}`);\n\t\t\t},\n\t\t\terror: (message: string): void => {\n\t\t\t\tconsole.error(`[Fast.Axios] ${message}`);\n\t\t\t},\n\t\t};\n\n\t\tconst successProxy: MessageHandle & MessageUseHandle = (message: string): void => {\n\t\t\tthis._handle.success(message);\n\t\t};\n\t\tsuccessProxy.use = (fn: MessageHandle): void => {\n\t\t\tthis._handle.success = fn;\n\t\t};\n\t\tthis.success = successProxy;\n\n\t\tconst warningProxy: MessageHandle & MessageUseHandle = (message: string): void => {\n\t\t\tthis._handle.warning(message);\n\t\t};\n\t\twarningProxy.use = (fn: MessageHandle): void => {\n\t\t\tthis._handle.warning = fn;\n\t\t};\n\t\tthis.warning = warningProxy;\n\n\t\tconst infoProxy: MessageHandle & MessageUseHandle = (message: string): void => {\n\t\t\tthis._handle.info(message);\n\t\t};\n\t\tinfoProxy.use = (fn: MessageHandle): void => {\n\t\t\tthis._handle.info = fn;\n\t\t};\n\t\tthis.info = infoProxy;\n\n\t\tconst errorProxy: MessageHandle & MessageUseHandle = (message: string): void => {\n\t\t\tthis._handle.error(message);\n\t\t};\n\t\terrorProxy.use = (fn: MessageHandle): void => {\n\t\t\tthis._handle.error = fn;\n\t\t};\n\t\tthis.error = errorProxy;\n\t}\n}\n"],"names":["constructor","__publicField","this","_handle","success","message","console","log","warning","warn","info","error","successProxy","use","fn","warningProxy","infoProxy","errorProxy"],"mappings":"gQAGO,MAiBN,WAAAA,GAhBQC,EAAAC,KAAA,WAQCD,EAAAC,KAAA,WAEAD,EAAAC,KAAA,WAEAD,EAAAC,KAAA,QAEAD,EAAAC,KAAA,SAGRA,KAAKC,QAAU,CACdC,QAAUC,IAEDC,QAAAC,IAAI,gBAAgBF,IAAS,EAEtCG,QAAUH,IACDC,QAAAG,KAAK,gBAAgBJ,IAAS,EAEvCK,KAAOL,IAEEC,QAAAC,IAAI,gBAAgBF,IAAS,EAEtCM,MAAQN,IACCC,QAAAK,MAAM,gBAAgBN,IAAS,GAInC,MAAAO,EAAkDP,IAClDH,KAAAC,QAAQC,QAAQC,EAAO,EAEhBO,EAAAC,IAAOC,IACnBZ,KAAKC,QAAQC,QAAUU,CAAA,EAExBZ,KAAKE,QAAUQ,EAET,MAAAG,EAAkDV,IAClDH,KAAAC,QAAQK,QAAQH,EAAO,EAEhBU,EAAAF,IAAOC,IACnBZ,KAAKC,QAAQK,QAAUM,CAAA,EAExBZ,KAAKM,QAAUO,EAET,MAAAC,EAA+CX,IAC/CH,KAAAC,QAAQO,KAAKL,EAAO,EAEhBW,EAAAH,IAAOC,IAChBZ,KAAKC,QAAQO,KAAOI,CAAA,EAErBZ,KAAKQ,KAAOM,EAEN,MAAAC,EAAgDZ,IAChDH,KAAAC,QAAQQ,MAAMN,EAAO,EAEhBY,EAAAJ,IAAOC,IACjBZ,KAAKC,QAAQQ,MAAQG,CAAA,EAEtBZ,KAAKS,MAAQM,CAAA"}